1. First command will be : git init (to initialize the git).
2. Then run 'git status'
3. use 'git add .' (for all the files ) or 'git add fileName' used to add the files to staging area where git can tract changes in the files
4. 'git commit -m 'message' ' use to save code to git 
5. 'git branch' shows list of all the branches (* active branch)
6. 'git diff --cached' shows difference b/w current staged and previous commit
7. 'git diff [commit id]' then you can check difference b/w two commits
8. 'git checkout <commit-number>', used to go to commit stage in the project
9. 'git checkout <branch-name>' go to head commit of branch or swich to other branch
10. 'q' we use this command after 'git log' to come out of logs
11. 'git log --graph' is used to to show commits in graphs
12. 'git log --graph --oneline' is used to to show commits in graphs in oneline.
13. 'git branch <branch name>' to create the new branch and then 'git checkout <branch name>' to switch to that branch
14. ' git log --graph --oneline --all' another command to check log with some flags to get extra information
15. 'git branch -d <branch name>'
16. 'git stash' saves tracked modified file(clean your history)
17. 'git stash apply' Applies latest Stash to current code
18. 'git remote add <remote-name> <remote-url>'
19. 'git push <remote-name> <branch-name>' (generally remote name is origine but it can be different)